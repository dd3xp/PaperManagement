{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\EditPaper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './EditPaper.css'; // 确保引入了CSS文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPaper = ({\n  match\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [shareInput, setShareInput] = useState('');\n  const [sharedUsers, setSharedUsers] = useState([]);\n  const {\n    paperId\n  } = match.params;\n  useEffect(() => {\n    const fetchPaperContent = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setContent(response.data.content);\n      } catch (error) {\n        console.error('Error fetching paper content:', error);\n      }\n    };\n    fetchPaperContent();\n    fetchSharedUsers();\n  }, [paperId]);\n  const fetchSharedUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers(response.data.sharedUsers || []);\n    } catch (error) {\n      console.error('Error fetching share list:', error);\n      alert('Failed to fetch share list.');\n    }\n  };\n  const handleSave = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/save`, {\n        paperId,\n        content\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Content saved to DOCX and converted to PDF successfully!');\n    } catch (error) {\n      console.error('Error saving content to DOCX and converting to PDF:', error);\n      alert('Failed to save content to DOCX and convert to PDF.');\n    }\n  };\n  const handleShare = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/share`, {\n        paperId,\n        userId: shareInput\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers([...sharedUsers, shareInput]);\n      setShareInput('');\n    } catch (error) {\n      console.error('Error sharing paper:', error);\n      alert('Failed to share paper.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-paper-title\",\n      children: \"Edit Paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"share-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShare,\n          className: \"share-button\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shareInput,\n          onChange: e => setShareInput(e.target.value),\n          className: \"share-input\",\n          placeholder: \"Enter user id to share\" /* 在输入框内添加提示语句 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-list-title\",\n        children: \"Share List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shared-users\",\n        children: sharedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"shared-user\",\n          children: [\"user\", user]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent,\n      className: \"quill-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"save-button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPaper, \"fGVmDSgsuiha1HBaoNQE1shMyAA=\");\n_c = EditPaper;\nexport default EditPaper;\nvar _c;\n$RefreshReg$(_c, \"EditPaper\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactQuill","jsxDEV","_jsxDEV","EditPaper","match","_s","content","setContent","shareInput","setShareInput","sharedUsers","setSharedUsers","paperId","params","fetchPaperContent","token","localStorage","getItem","response","get","headers","data","error","console","fetchSharedUsers","alert","handleSave","post","handleShare","userId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","map","user","index","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/EditPaper.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './EditPaper.css'; // 确保引入了CSS文件\r\n\r\nconst EditPaper = ({ match }) => {\r\n  const [content, setContent] = useState('');\r\n  const [shareInput, setShareInput] = useState('');\r\n  const [sharedUsers, setSharedUsers] = useState([]);\r\n  const { paperId } = match.params;\r\n\r\n  useEffect(() => {\r\n    const fetchPaperContent = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setContent(response.data.content);\r\n      } catch (error) {\r\n        console.error('Error fetching paper content:', error);\r\n      }\r\n    };\r\n\r\n    fetchPaperContent();\r\n    fetchSharedUsers();\r\n  }, [paperId]);\r\n\r\n  const fetchSharedUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers(response.data.sharedUsers || []);\r\n    } catch (error) {\r\n      console.error('Error fetching share list:', error);\r\n      alert('Failed to fetch share list.');\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/save`, {\r\n        paperId,\r\n        content,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      alert('Content saved to DOCX and converted to PDF successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving content to DOCX and converting to PDF:', error);\r\n      alert('Failed to save content to DOCX and convert to PDF.');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/share`, {\r\n        paperId,\r\n        userId: shareInput,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers([...sharedUsers, shareInput]);\r\n      setShareInput('');\r\n    } catch (error) {\r\n      console.error('Error sharing paper:', error);\r\n      alert('Failed to share paper.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-paper-container\">\r\n      <div className=\"edit-paper-title\">Edit Paper</div> {/* 添加标题 */}\r\n      <div className=\"share-container\">\r\n        <div className=\"share-button-container\">\r\n          <button onClick={handleShare} className=\"share-button\">Share</button>\r\n          <input\r\n            type=\"text\"\r\n            value={shareInput}\r\n            onChange={(e) => setShareInput(e.target.value)}\r\n            className=\"share-input\"\r\n            placeholder=\"Enter user id to share\" /* 在输入框内添加提示语句 */\r\n          />\r\n        </div>\r\n        <div className=\"share-list-title\">Share List</div>\r\n        <div className=\"shared-users\">\r\n          {sharedUsers.map((user, index) => (\r\n            <div key={index} className=\"shared-user\">user{user}</div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <ReactQuill value={content} onChange={setContent} className=\"quill-editor\" />\r\n      <button onClick={handleSave} className=\"save-button\">Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPaper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}