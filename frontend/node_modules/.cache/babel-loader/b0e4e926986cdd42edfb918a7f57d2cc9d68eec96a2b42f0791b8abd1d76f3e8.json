{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    paperId\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5001/api/comments/${paperId}`);\n        setComments(response.data);\n      } catch (error) {\n        console.error('Error fetching comments:', error);\n      }\n    };\n    fetchComments();\n  }, [paperId]);\n  const handleAddComment = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/api/comments', {\n        content: newComment,\n        paperId\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments([response.data.comment, ...comments]); // 将新评论添加到顶部\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment-container\",\n        children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n          value: newComment,\n          onChange: setNewComment,\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comments-list\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-item\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"user\", comment.userId, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 18\n            }, this), \" \", comment.content]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"NYmBS4qusEfhc5neftUBDmOvnQM=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","ReactQuill","jsxDEV","_jsxDEV","Comments","_s","paperId","comments","setComments","newComment","setNewComment","fetchComments","response","get","data","error","console","handleAddComment","token","localStorage","getItem","post","content","headers","Authorization","comment","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","placeholder","onClick","map","userId","id","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './Comments.css';\r\n\r\nconst Comments = () => {\r\n  const { paperId } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5001/api/comments/${paperId}`);\r\n        setComments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching comments:', error);\r\n      }\r\n    };\r\n\r\n    fetchComments();\r\n  }, [paperId]);\r\n\r\n  const handleAddComment = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5001/api/comments',\r\n        {\r\n          content: newComment,\r\n          paperId,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setComments([response.data.comment, ...comments]); // 将新评论添加到顶部\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"comments-container\">\r\n      <h1>Comments</h1>\r\n      <div className=\"comments-content\">\r\n        <div className=\"add-comment-container\">\r\n          <ReactQuill \r\n            value={newComment}\r\n            onChange={setNewComment}\r\n            placeholder=\"Add a comment...\"\r\n          />\r\n          <button onClick={handleAddComment}>Submit</button>\r\n        </div>\r\n        <div className=\"comments-list\">\r\n          {comments.map((comment) => (\r\n            <div key={comment.id} className=\"comment-item\">\r\n              <p><strong>user{comment.userId}:</strong> {comment.content}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAQ,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC/B,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,sCAAsCP,OAAO,EAAE,CAAC;QACjFE,WAAW,CAACI,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACL,OAAO,CAAC,CAAC;EAEb,MAAMW,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMR,QAAQ,GAAG,MAAMb,KAAK,CAACsB,IAAI,CAC/B,oCAAoC,EACpC;QACEC,OAAO,EAAEb,UAAU;QACnBH;MACF,CAAC,EACD;QACEiB,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUN,KAAK;QAChC;MACF,CACF,CAAC;MACDV,WAAW,CAAC,CAACI,QAAQ,CAACE,IAAI,CAACW,OAAO,EAAE,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC;MACnDG,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKuB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCxB,OAAA;MAAAwB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB5B,OAAA;MAAKuB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BxB,OAAA;QAAKuB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,gBACpCxB,OAAA,CAACF,UAAU;UACT+B,KAAK,EAAEvB,UAAW;UAClBwB,QAAQ,EAAEvB,aAAc;UACxBwB,WAAW,EAAC;QAAkB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACF5B,OAAA;UAAQgC,OAAO,EAAElB,gBAAiB;UAAAU,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACN5B,OAAA;QAAKuB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BpB,QAAQ,CAAC6B,GAAG,CAAEX,OAAO,iBACpBtB,OAAA;UAAsBuB,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC5CxB,OAAA;YAAAwB,QAAA,gBAAGxB,OAAA;cAAAwB,QAAA,GAAQ,MAAI,EAACF,OAAO,CAACY,MAAM,EAAC,GAAC;YAAA;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACN,OAAO,CAACH,OAAO;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC,GADvDN,OAAO,CAACa,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA9DID,QAAQ;EAAA,QACQJ,SAAS;AAAA;AAAAuC,EAAA,GADzBnC,QAAQ;AAgEd,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}