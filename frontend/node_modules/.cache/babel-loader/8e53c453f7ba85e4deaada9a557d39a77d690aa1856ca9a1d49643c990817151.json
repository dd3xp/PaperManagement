{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\EditPaper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './EditPaper.css'; // 确保引入了CSS文件\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPaper = ({\n  match\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [shareInput, setShareInput] = useState('');\n  const [sharedUsers, setSharedUsers] = useState([]);\n  const [isOwner, setIsOwner] = useState(false);\n  const [canEdit, setCanEdit] = useState(false); // 新增变量判断是否可以编辑\n  const {\n    paperId\n  } = match.params;\n  const socketRef = useRef(null);\n  useEffect(() => {\n    const fetchPaperContent = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setIsOwner(response.data.isOwner);\n        setCanEdit(response.data.isOwner || response.data.isSharedUser);\n        if (response.data.isOwner || response.data.isSharedUser) {\n          const formattedContent = formatTextContent(response.data.content);\n          setContent(formattedContent);\n        }\n      } catch (error) {\n        console.error('Error fetching paper content:', error);\n      }\n    };\n    fetchPaperContent();\n    fetchSharedUsers();\n    socketRef.current = io('http://localhost:5001');\n    socketRef.current.emit('joinPaper', paperId);\n    socketRef.current.on('contentUpdate', newContent => {\n      setContent(newContent);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [paperId]);\n  const fetchSharedUsers = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers(response.data.sharedUsers || []);\n    } catch (error) {\n      console.error('Error fetching share list:', error);\n      alert('Failed to fetch share list.');\n    }\n  };\n  const formatTextContent = textContent => {\n    const lines = textContent.split('\\n');\n    const formattedLines = lines.map(line => `<p>${line}</p>`);\n    return formattedLines.join('');\n  };\n  const handleSave = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/save`, {\n        paperId,\n        content\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Content saved to DOCX and converted to PDF successfully!');\n    } catch (error) {\n      console.error('Error saving content to DOCX and converting to PDF:', error);\n      alert('Failed to save content to DOCX and convert to PDF.');\n    }\n  };\n  const handleShare = async () => {\n    if (shareInput.length > 10) {\n      alert('User ID cannot exceed 10 characters.');\n      return;\n    }\n    if (sharedUsers.includes(shareInput)) {\n      alert('User is already shared.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/share`, {\n        paperId,\n        userId: shareInput\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers([...sharedUsers, shareInput]);\n      setShareInput('');\n    } catch (error) {\n      console.error('Error sharing paper:', error);\n      alert('Failed to share paper.');\n    }\n  };\n  const handleDeleteShareUser = async userId => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/unshare`, {\n        paperId,\n        userId\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers(sharedUsers.filter(user => user !== userId));\n    } catch (error) {\n      console.error('Error unsharing paper:', error);\n      alert('Failed to unshare paper.');\n    }\n  };\n  const handleContentChange = newContent => {\n    setContent(newContent);\n    socketRef.current.emit('contentChange', {\n      paperId,\n      content: newContent\n    });\n  };\n  if (!canEdit) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-paper-refuse-access\",\n      children: \"Access Denied\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 12\n    }, this); // 拒绝访问页面\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-paper-title\",\n      children: \"Edit Paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), \" \", isOwner && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-paper-share-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-paper-share-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShare,\n          className: \"edit-paper-share-button\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shareInput,\n          onChange: e => setShareInput(e.target.value),\n          className: \"edit-paper-share-input\",\n          placeholder: \"Enter user id to share\" /* 在输入框内添加提示语句 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-paper-share-list-title\",\n        children: \"Share List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-paper-shared-users\",\n        children: sharedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit-paper-shared-user\",\n          children: [\"user\", user, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-paper-delete-share-user-button\",\n            onClick: () => handleDeleteShareUser(user),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: handleContentChange,\n      className: \"edit-paper-quill-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"edit-paper-save-button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPaper, \"3bAmLq3dJkn/CmZ0blzi8mdUo78=\");\n_c = EditPaper;\nexport default EditPaper;\nvar _c;\n$RefreshReg$(_c, \"EditPaper\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","ReactQuill","io","jsxDEV","_jsxDEV","EditPaper","match","_s","content","setContent","shareInput","setShareInput","sharedUsers","setSharedUsers","isOwner","setIsOwner","canEdit","setCanEdit","paperId","params","socketRef","fetchPaperContent","token","localStorage","getItem","response","get","headers","data","isSharedUser","formattedContent","formatTextContent","error","console","fetchSharedUsers","current","emit","on","newContent","disconnect","alert","textContent","lines","split","formattedLines","map","line","join","handleSave","post","handleShare","length","includes","userId","handleDeleteShareUser","filter","user","handleContentChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","placeholder","index","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/EditPaper.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './EditPaper.css'; // 确保引入了CSS文件\r\nimport io from 'socket.io-client';\r\n\r\nconst EditPaper = ({ match }) => {\r\n  const [content, setContent] = useState('');\r\n  const [shareInput, setShareInput] = useState('');\r\n  const [sharedUsers, setSharedUsers] = useState([]);\r\n  const [isOwner, setIsOwner] = useState(false);\r\n  const [canEdit, setCanEdit] = useState(false); // 新增变量判断是否可以编辑\r\n  const { paperId } = match.params;\r\n  const socketRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const fetchPaperContent = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setIsOwner(response.data.isOwner);\r\n        setCanEdit(response.data.isOwner || response.data.isSharedUser);\r\n\r\n        if (response.data.isOwner || response.data.isSharedUser) {\r\n          const formattedContent = formatTextContent(response.data.content);\r\n          setContent(formattedContent);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching paper content:', error);\r\n      }\r\n    };\r\n\r\n    fetchPaperContent();\r\n    fetchSharedUsers();\r\n\r\n    socketRef.current = io('http://localhost:5001');\r\n    socketRef.current.emit('joinPaper', paperId);\r\n\r\n    socketRef.current.on('contentUpdate', (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [paperId]);\r\n\r\n  const fetchSharedUsers = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers(response.data.sharedUsers || []);\r\n    } catch (error) {\r\n      console.error('Error fetching share list:', error);\r\n      alert('Failed to fetch share list.');\r\n    }\r\n  };\r\n\r\n  const formatTextContent = (textContent) => {\r\n    const lines = textContent.split('\\n');\r\n    const formattedLines = lines.map(line => `<p>${line}</p>`);\r\n    return formattedLines.join('');\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/save`, {\r\n        paperId,\r\n        content,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      alert('Content saved to DOCX and converted to PDF successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving content to DOCX and converting to PDF:', error);\r\n      alert('Failed to save content to DOCX and convert to PDF.');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    if (shareInput.length > 10) {\r\n      alert('User ID cannot exceed 10 characters.');\r\n      return;\r\n    }\r\n    if (sharedUsers.includes(shareInput)) {\r\n      alert('User is already shared.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/share`, {\r\n        paperId,\r\n        userId: shareInput,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers([...sharedUsers, shareInput]);\r\n      setShareInput('');\r\n    } catch (error) {\r\n      console.error('Error sharing paper:', error);\r\n      alert('Failed to share paper.');\r\n    }\r\n  };\r\n\r\n  const handleDeleteShareUser = async (userId) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/unshare`, {\r\n        paperId,\r\n        userId,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers(sharedUsers.filter(user => user !== userId));\r\n    } catch (error) {\r\n      console.error('Error unsharing paper:', error);\r\n      alert('Failed to unshare paper.');\r\n    }\r\n  };\r\n\r\n  const handleContentChange = (newContent) => {\r\n    setContent(newContent);\r\n    socketRef.current.emit('contentChange', { paperId, content: newContent });\r\n  };\r\n\r\n  if (!canEdit) {\r\n    return <div className=\"edit-paper-refuse-access\">Access Denied</div>; // 拒绝访问页面\r\n  }\r\n\r\n  return (\r\n    <div className=\"edit-paper-container\">\r\n      <div className=\"edit-paper-title\">Edit Paper</div> {/* 添加标题 */}\r\n      {isOwner && (\r\n        <div className=\"edit-paper-share-container\">\r\n          <div className=\"edit-paper-share-button-container\">\r\n            <button onClick={handleShare} className=\"edit-paper-share-button\">Share</button>\r\n            <input\r\n              type=\"text\"\r\n              value={shareInput}\r\n              onChange={(e) => setShareInput(e.target.value)}\r\n              className=\"edit-paper-share-input\"\r\n              placeholder=\"Enter user id to share\" /* 在输入框内添加提示语句 */\r\n            />\r\n          </div>\r\n          <div className=\"edit-paper-share-list-title\">Share List</div>\r\n          <div className=\"edit-paper-shared-users\">\r\n            {sharedUsers.map((user, index) => (\r\n              <div key={index} className=\"edit-paper-shared-user\">\r\n                user{user}\r\n                <button\r\n                  className=\"edit-paper-delete-share-user-button\"\r\n                  onClick={() => handleDeleteShareUser(user)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <ReactQuill value={content} onChange={handleContentChange} className=\"edit-paper-quill-editor\" />\r\n      {isOwner && <button onClick={handleSave} className=\"edit-paper-save-button\">Save</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPaper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}