{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\EditPaper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport './EditPaper.css'; // 确保引入了CSS文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPaper = ({\n  match\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [shareInput, setShareInput] = useState('');\n  const [sharedUsers, setSharedUsers] = useState([]);\n  const [showSharedUsers, setShowSharedUsers] = useState(false); // 控制是否显示sharedUsers\n  const {\n    paperId\n  } = match.params;\n  useEffect(() => {\n    const fetchPaperContent = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setContent(response.data.content);\n      } catch (error) {\n        console.error('Error fetching paper content:', error);\n      }\n    };\n    fetchPaperContent();\n  }, [paperId]);\n  const handleSave = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/save`, {\n        paperId,\n        content\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      alert('Content saved to DOCX and converted to PDF successfully!');\n    } catch (error) {\n      console.error('Error saving content to DOCX and converting to PDF:', error);\n      alert('Failed to save content to DOCX and convert to PDF.');\n    }\n  };\n  const handleImport = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setContent(response.data.content);\n    } catch (error) {\n      console.error('Error importing content:', error);\n      alert('Failed to import content.');\n    }\n  };\n  const handleShare = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post(`http://localhost:5001/api/papers/share`, {\n        paperId,\n        userId: shareInput\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers([...sharedUsers, `user${shareInput}`]);\n      setShareInput('');\n    } catch (error) {\n      console.error('Error sharing paper:', error);\n      alert('Failed to share paper.');\n    }\n  };\n  const handleShareList = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setSharedUsers(response.data.sharedUsers || []);\n      setShowSharedUsers(true); // 显示sharedUsers\n    } catch (error) {\n      console.error('Error fetching share list:', error);\n      alert('Failed to fetch share list.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImport,\n      className: \"import-button\",\n      children: \"Import\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"share-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"share-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleShare,\n          className: \"share-button\",\n          children: \"Share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: shareInput,\n          onChange: e => setShareInput(e.target.value),\n          className: \"share-input\",\n          placeholder: \"Enter user id to share\" /* 在输入框内添加提示语句 */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShareList,\n        className: \"share-list-button\",\n        children: \"Share List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), showSharedUsers && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shared-users\",\n      children: sharedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: user\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent,\n      className: \"quill-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"save-button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPaper, \"JUyqgYPsWealhToGRgH50JjB0IQ=\");\n_c = EditPaper;\nexport default EditPaper;\nvar _c;\n$RefreshReg$(_c, \"EditPaper\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactQuill","jsxDEV","_jsxDEV","EditPaper","match","_s","content","setContent","shareInput","setShareInput","sharedUsers","setSharedUsers","showSharedUsers","setShowSharedUsers","paperId","params","fetchPaperContent","token","localStorage","getItem","response","get","headers","data","error","console","handleSave","post","alert","handleImport","handleShare","userId","handleShareList","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","map","user","index","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/EditPaper.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport './EditPaper.css'; // 确保引入了CSS文件\r\n\r\nconst EditPaper = ({ match }) => {\r\n  const [content, setContent] = useState('');\r\n  const [shareInput, setShareInput] = useState('');\r\n  const [sharedUsers, setSharedUsers] = useState([]);\r\n  const [showSharedUsers, setShowSharedUsers] = useState(false); // 控制是否显示sharedUsers\r\n  const { paperId } = match.params;\r\n\r\n  useEffect(() => {\r\n    const fetchPaperContent = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setContent(response.data.content);\r\n      } catch (error) {\r\n        console.error('Error fetching paper content:', error);\r\n      }\r\n    };\r\n\r\n    fetchPaperContent();\r\n  }, [paperId]);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/save`, {\r\n        paperId,\r\n        content,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      alert('Content saved to DOCX and converted to PDF successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving content to DOCX and converting to PDF:', error);\r\n      alert('Failed to save content to DOCX and convert to PDF.');\r\n    }\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5001/api/papers/content/${paperId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setContent(response.data.content);\r\n    } catch (error) {\r\n      console.error('Error importing content:', error);\r\n      alert('Failed to import content.');\r\n    }\r\n  };\r\n\r\n  const handleShare = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.post(`http://localhost:5001/api/papers/share`, {\r\n        paperId,\r\n        userId: shareInput,\r\n      }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers([...sharedUsers, `user${shareInput}`]);\r\n      setShareInput('');\r\n    } catch (error) {\r\n      console.error('Error sharing paper:', error);\r\n      alert('Failed to share paper.');\r\n    }\r\n  };\r\n\r\n  const handleShareList = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5001/api/papers/share-list/${paperId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setSharedUsers(response.data.sharedUsers || []);\r\n      setShowSharedUsers(true); // 显示sharedUsers\r\n    } catch (error) {\r\n      console.error('Error fetching share list:', error);\r\n      alert('Failed to fetch share list.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-paper-container\">\r\n      <button onClick={handleImport} className=\"import-button\">Import</button>\r\n      <div className=\"share-container\">\r\n        <div className=\"share-button-container\">\r\n          <button onClick={handleShare} className=\"share-button\">Share</button>\r\n          <input\r\n            type=\"text\"\r\n            value={shareInput}\r\n            onChange={(e) => setShareInput(e.target.value)}\r\n            className=\"share-input\"\r\n            placeholder=\"Enter user id to share\" /* 在输入框内添加提示语句 */\r\n          />\r\n        </div>\r\n        <button onClick={handleShareList} className=\"share-list-button\">Share List</button>\r\n      </div>\r\n      {showSharedUsers && (\r\n        <div className=\"shared-users\">\r\n          {sharedUsers.map((user, index) => (\r\n            <div key={index}>{user}</div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      <h1>Edit Paper</h1>\r\n      <ReactQuill value={content} onChange={setContent} className=\"quill-editor\" />\r\n      <button onClick={handleSave} className=\"save-button\">Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPaper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,aAAa;AACpC,OAAO,iCAAiC;AACxC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/D,MAAM;IAAEgB;EAAQ,CAAC,GAAGV,KAAK,CAACW,MAAM;EAEhClB,SAAS,CAAC,MAAM;IACd,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,4CAA4CP,OAAO,EAAE,EAAE;UACtFQ,OAAO,EAAE;YACP,eAAe,EAAE,UAAUL,KAAK;UAClC;QACF,CAAC,CAAC;QACFV,UAAU,CAACa,QAAQ,CAACG,IAAI,CAACjB,OAAO,CAAC;MACnC,CAAC,CAAC,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDR,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMT,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,uCAAuC,EAAE;QACxDb,OAAO;QACPR;MACF,CAAC,EAAE;QACDgB,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC,CAAC;MACFW,KAAK,CAAC,0DAA0D,CAAC;IACnE,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;MAC3EI,KAAK,CAAC,oDAAoD,CAAC;IAC7D;EACF,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMZ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,4CAA4CP,OAAO,EAAE,EAAE;QACtFQ,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC,CAAC;MACFV,UAAU,CAACa,QAAQ,CAACG,IAAI,CAACjB,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDI,KAAK,CAAC,2BAA2B,CAAC;IACpC;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMb,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMpB,KAAK,CAAC4B,IAAI,CAAC,wCAAwC,EAAE;QACzDb,OAAO;QACPiB,MAAM,EAAEvB;MACV,CAAC,EAAE;QACDc,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC,CAAC;MACFN,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE,OAAOF,UAAU,EAAE,CAAC,CAAC;MACrDC,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CI,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF,CAAC;EAED,MAAMI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAMf,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,+CAA+CP,OAAO,EAAE,EAAE;QACzFQ,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC,CAAC;MACFN,cAAc,CAACS,QAAQ,CAACG,IAAI,CAACb,WAAW,IAAI,EAAE,CAAC;MAC/CG,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDI,KAAK,CAAC,6BAA6B,CAAC;IACtC;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK+B,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnChC,OAAA;MAAQiC,OAAO,EAAEN,YAAa;MAACI,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxErC,OAAA;MAAK+B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BhC,OAAA;QAAK+B,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACrChC,OAAA;UAAQiC,OAAO,EAAEL,WAAY;UAACG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrErC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjC,UAAW;UAClBkC,QAAQ,EAAGC,CAAC,IAAKlC,aAAa,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC/CR,SAAS,EAAC,aAAa;UACvBY,WAAW,EAAC,wBAAwB,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNrC,OAAA;QAAQiC,OAAO,EAAEH,eAAgB;QAACC,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,EACL3B,eAAe,iBACdV,OAAA;MAAK+B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BxB,WAAW,CAACoC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B9C,OAAA;QAAAgC,QAAA,EAAkBa;MAAI,GAAZC,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eACDrC,OAAA;MAAAgC,QAAA,EAAI;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrC,OAAA,CAACF,UAAU;MAACyC,KAAK,EAAEnC,OAAQ;MAACoC,QAAQ,EAAEnC,UAAW;MAAC0B,SAAS,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7ErC,OAAA;MAAQiC,OAAO,EAAET,UAAW;MAACO,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAClC,EAAA,CAzHIF,SAAS;AAAA8C,EAAA,GAAT9C,SAAS;AA2Hf,eAAeA,SAAS;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}