{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\EditPaper.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { jsPDF } from 'jspdf'; // 引入 jsPDF 库\nimport './EditPaper.css'; // 确保引入了CSS文件\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPaper = ({\n  match\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const {\n    paperId\n  } = match.params;\n  useEffect(() => {\n    const fetchPdfText = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/papers/text/${paperId}`, {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n        setContent(response.data.text);\n      } catch (error) {\n        console.error('Error fetching PDF text:', error);\n      }\n    };\n    fetchPdfText();\n  }, [paperId]);\n  const handleSave = async () => {\n    try {\n      const doc = new jsPDF();\n      doc.text(content, 10, 10);\n      const pdfBlob = doc.output('blob');\n      const formData = new FormData();\n      formData.append('pdf', pdfBlob, `${paperId}.pdf`);\n      const token = localStorage.getItem('token');\n      await axios.put(`http://localhost:5001/api/papers/pdf/${paperId}`, formData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Content saved successfully!');\n    } catch (error) {\n      console.error('Error saving content:', error);\n      alert('Failed to save content.');\n    }\n  };\n  const handleImport = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`http://localhost:5001/api/papers/text/${paperId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setContent(response.data.text);\n    } catch (error) {\n      console.error('Error importing text:', error);\n      alert('Failed to import text.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edit-paper-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImport,\n      className: \"import-button\",\n      children: \"Import\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Edit Paper\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: setContent,\n      style: {\n        height: '80vh',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      className: \"save-button\",\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPaper, \"wipnac41BTB3eHT+ORLT1pgXER0=\");\n_c = EditPaper;\nexport default EditPaper;\nvar _c;\n$RefreshReg$(_c, \"EditPaper\");","map":{"version":3,"names":["React","useEffect","useState","axios","ReactQuill","jsPDF","jsxDEV","_jsxDEV","EditPaper","match","_s","content","setContent","paperId","params","fetchPdfText","token","localStorage","getItem","response","get","headers","data","text","error","console","handleSave","doc","pdfBlob","output","formData","FormData","append","put","alert","handleImport","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","style","height","width","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/EditPaper.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { jsPDF } from 'jspdf'; // 引入 jsPDF 库\r\nimport './EditPaper.css'; // 确保引入了CSS文件\r\n\r\nconst EditPaper = ({ match }) => {\r\n  const [content, setContent] = useState('');\r\n  const { paperId } = match.params;\r\n\r\n  useEffect(() => {\r\n    const fetchPdfText = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5001/api/papers/text/${paperId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        });\r\n        setContent(response.data.text);\r\n      } catch (error) {\r\n        console.error('Error fetching PDF text:', error);\r\n      }\r\n    };\r\n\r\n    fetchPdfText();\r\n  }, [paperId]);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const doc = new jsPDF();\r\n      doc.text(content, 10, 10);\r\n      const pdfBlob = doc.output('blob');\r\n\r\n      const formData = new FormData();\r\n      formData.append('pdf', pdfBlob, `${paperId}.pdf`);\r\n\r\n      const token = localStorage.getItem('token');\r\n      await axios.put(`http://localhost:5001/api/papers/pdf/${paperId}`, formData, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n\r\n      alert('Content saved successfully!');\r\n    } catch (error) {\r\n      console.error('Error saving content:', error);\r\n      alert('Failed to save content.');\r\n    }\r\n  };\r\n\r\n  const handleImport = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:5001/api/papers/text/${paperId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      setContent(response.data.text);\r\n    } catch (error) {\r\n      console.error('Error importing text:', error);\r\n      alert('Failed to import text.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"edit-paper-container\">\r\n      <button onClick={handleImport} className=\"import-button\">Import</button>\r\n      <h1>Edit Paper</h1>\r\n      <ReactQuill value={content} onChange={setContent} style={{ height: '80vh', width: '100%' }} />\r\n      <button onClick={handleSave} className=\"save-button\">Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditPaper;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}