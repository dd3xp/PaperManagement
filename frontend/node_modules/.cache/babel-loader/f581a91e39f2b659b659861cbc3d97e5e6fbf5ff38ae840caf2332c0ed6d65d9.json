{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\cpp\\\\oop\\\\cppcode\\\\PaperManagement\\\\webapp\\\\frontend\\\\src\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Comments = () => {\n  _s();\n  const {\n    paperId\n  } = useParams();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const [averageRating, setAverageRating] = useState(null); // 确保初始值为null\n  const [currentUserId, setCurrentUserId] = useState(null);\n  const [userHasRated, setUserHasRated] = useState(false);\n  useEffect(() => {\n    const fetchCommentsAndRating = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`http://localhost:5001/api/comments/${paperId}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setComments(response.data.comments);\n        setAverageRating(response.data.averageRating);\n        setUserHasRated(response.data.userHasRated);\n      } catch (error) {\n        console.error('Error fetching comments and rating:', error);\n      }\n    };\n    const fetchCurrentUser = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:5001/api/auth/current', {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setCurrentUserId(response.data.id);\n      } catch (error) {\n        console.error('Error fetching current user:', error);\n      }\n    };\n    fetchCommentsAndRating();\n    fetchCurrentUser();\n  }, [paperId]);\n  const handleAddComment = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/api/comments', {\n        content: newComment,\n        paperId,\n        rating: 0\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setComments([response.data.comment, ...comments]);\n      setNewComment('');\n    } catch (error) {\n      console.error('Error adding comment:', error);\n    }\n  };\n  const handleRatePaper = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post('http://localhost:5001/api/comments/rate', {\n        paperId,\n        rating\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserHasRated(true);\n      setAverageRating(response.data.averageRating);\n    } catch (error) {\n      console.error('Error rating paper:', error);\n    }\n  };\n  const handleRatingChange = e => {\n    setRating(parseInt(e.target.value, 10));\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentspage-comments-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentspage-average-rating\",\n      children: [\"Average Rating: \", averageRating !== null ? averageRating.toFixed(1) : 'No ratings yet']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentspage-comments-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentspage-add-comment-container\",\n        children: [!userHasRated && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentspage-rating-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"rating\",\n            children: \"Rate this paper:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"rating\",\n            value: rating,\n            onChange: handleRatingChange,\n            className: \"commentspage-rating-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"Select rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleRatePaper,\n            className: \"commentspage-rate-button\",\n            children: \"Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment...\",\n          className: \"commentspage-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddComment,\n          className: \"commentspage-submit-button\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentspage-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentspage-comments-list\",\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"commentspage-comment-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentspage-comment-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"user\", comment.userId, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), \" \", comment.content]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"commentspage-comment-date\",\n              children: formatDate(comment.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"BBEP90uEfa/xNuUudgZ/YAkTYdQ=\", false, function () {\n  return [useParams];\n});\n_c = Comments;\nexport default Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","jsxDEV","_jsxDEV","Comments","_s","paperId","comments","setComments","newComment","setNewComment","rating","setRating","averageRating","setAverageRating","currentUserId","setCurrentUserId","userHasRated","setUserHasRated","fetchCommentsAndRating","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","fetchCurrentUser","id","handleAddComment","post","content","comment","handleRatePaper","handleRatingChange","e","parseInt","target","value","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","htmlFor","onChange","onClick","placeholder","map","userId","createdAt","_c","$RefreshReg$"],"sources":["C:/Program Files/cpp/oop/cppcode/PaperManagement/webapp/frontend/src/Comments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport './Comments.css';\r\n\r\nconst Comments = () => {\r\n  const { paperId } = useParams();\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [rating, setRating] = useState(0);\r\n  const [averageRating, setAverageRating] = useState(null); // 确保初始值为null\r\n  const [currentUserId, setCurrentUserId] = useState(null);\r\n  const [userHasRated, setUserHasRated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchCommentsAndRating = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get(`http://localhost:5001/api/comments/${paperId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setComments(response.data.comments);\r\n        setAverageRating(response.data.averageRating);\r\n        setUserHasRated(response.data.userHasRated);\r\n      } catch (error) {\r\n        console.error('Error fetching comments and rating:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const response = await axios.get('http://localhost:5001/api/auth/current', {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        });\r\n        setCurrentUserId(response.data.id);\r\n      } catch (error) {\r\n        console.error('Error fetching current user:', error);\r\n      }\r\n    };\r\n\r\n    fetchCommentsAndRating();\r\n    fetchCurrentUser();\r\n  }, [paperId]);\r\n\r\n  const handleAddComment = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5001/api/comments',\r\n        {\r\n          content: newComment,\r\n          paperId,\r\n          rating: 0,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setComments([response.data.comment, ...comments]);\r\n      setNewComment('');\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleRatePaper = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post(\r\n        'http://localhost:5001/api/comments/rate',\r\n        {\r\n          paperId,\r\n          rating,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      setUserHasRated(true);\r\n      setAverageRating(response.data.averageRating);\r\n    } catch (error) {\r\n      console.error('Error rating paper:', error);\r\n    }\r\n  };\r\n\r\n  const handleRatingChange = (e) => {\r\n    setRating(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div className=\"commentspage-comments-container\">\r\n      <h1>Comments</h1>\r\n      <div className=\"commentspage-average-rating\">\r\n        Average Rating: {averageRating !== null ? averageRating.toFixed(1) : 'No ratings yet'}\r\n      </div>\r\n      <div className=\"commentspage-comments-grid\">\r\n        <div className=\"commentspage-add-comment-container\">\r\n          {!userHasRated && (\r\n            <div className=\"commentspage-rating-container\">\r\n              <label htmlFor=\"rating\">Rate this paper:</label>\r\n              <select\r\n                id=\"rating\"\r\n                value={rating}\r\n                onChange={handleRatingChange}\r\n                className=\"commentspage-rating-select\"\r\n              >\r\n                <option value=\"0\">Select rating</option>\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n              </select>\r\n              <button onClick={handleRatePaper} className=\"commentspage-rate-button\">\r\n                Rate\r\n              </button>\r\n            </div>\r\n          )}\r\n          <textarea\r\n            value={newComment}\r\n            onChange={(e) => setNewComment(e.target.value)}\r\n            placeholder=\"Add a comment...\"\r\n            className=\"commentspage-textarea\"\r\n          />\r\n          <button onClick={handleAddComment} className=\"commentspage-submit-button\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <div className=\"commentspage-divider\"></div>\r\n        <div className=\"commentspage-comments-list\">\r\n          {comments.map((comment) => (\r\n            <div key={comment.id} className=\"commentspage-comment-item\">\r\n              <div className=\"commentspage-comment-content\">\r\n                <p>\r\n                  <strong>user{comment.userId}:</strong> {comment.content}\r\n                </p>\r\n                <p className=\"commentspage-comment-date\">{formatDate(comment.createdAt)}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}